#!/usr/bin/env python3
import gym

from environment.utils import register_env
from environment.wrapper.DictObservationWrapper import DictObservationWrapper

from agent.DeepQAgent import DeepQAgent

from utils.utils import seed_everything

SEED = 2023
N_STEPS = 100
N_NODES = 25

SCHEDULERS = {
    "deepq": {"agent": DeepQAgent, "env_wrappers": [DictObservationWrapper]},
}


def train(scheduler="default"):
    config = SCHEDULERS[scheduler]
    env = gym.make(
        "K8sScheduling-v0",
        scheduler_name=f"{scheduler}-scheduler",
        n_nodes=N_NODES,
        n_pods=N_STEPS,
    )
    eval_env = gym.make(
        "K8sScheduling-v0",
        scheduler_name=f"{scheduler}-scheduler",
        n_nodes=N_NODES,
        n_pods=N_STEPS,
    )

    if config.get("env_wrappers"):
        for wrapper in config["env_wrappers"]:
            env = wrapper(env)
            eval_env = wrapper(eval_env)

    agent_args = {**config.get("args", {})}
    if scheduler in ["deepq"]:
        agent_args.update({"env": env, "eval_env": eval_env})

    agent = config["agent"](**agent_args)
    agent.train(steps=1000)


if __name__ == "__main__":
    seed_everything(SEED)
    register_env()
    for scheduler in SCHEDULERS:
        scheduler_rewards = train(scheduler=scheduler)
